# dependency
# see if there is a relationship between time series variables

import yfinance as yf
import numpy as np

ticker = 'TSLA'
tkr = yf.Ticker(ticker)
df = tkr.history(period='1mo')

	#                    Open         High  ...  Dividends  Stock Splits
	# Date                                  ...                         
	# 2022-04-20  1030.000000  1034.000000  ...          0             0
	# 2022-04-21  1074.729980  1092.219971  ...          0             0
	# ...
	# 2022-05-18   744.520020   760.500000  ...          0             0
	# 2022-05-19   707.000000   734.000000  ...          0             0

# Keep only the Close and Volumne columns, and rename Close to Price
df = df[['Close', 'Volume']].rename(columns = {'Close': 'Price'})
	#                   Price    Volume
	# Date                             
	# 2022-04-20   977.200012  23570400
	# 2022-04-21  1008.780029  35138800
	# ...
	# 2022-05-18   709.809998  29270600
	# 2022-05-19   709.419983  30005200

# Calculate the % change of each columns from day to day
df['PriceRise'] = np.log(df['Price'] / df['Price'].shift(1))
df['VolRise'] = np.log(df['Volume'] / df['Volume'].shift(1))

print(df)
	#                   Price    Volume  PriceRise   VolRise
	# Date                                                  
	# 2022-04-20   977.200012  23570400        NaN       NaN
	# 2022-04-21  1008.780029  35138800   0.031806  0.399314
	# 2022-04-22  1005.049988  23232200  -0.003704 -0.413767
	# 2022-04-25   998.020020  22780400  -0.007019 -0.019639
	# 2022-04-26   876.419983  45377900  -0.129928  0.689125
	# 2022-04-27   881.510010  25652100   0.005791 -0.570400
	# 2022-04-28   877.510010  41649500  -0.004548  0.484664
	# 2022-04-29   870.760010  29313400  -0.007722 -0.351245
	# 2022-05-02   902.940002  25260500   0.036290 -0.148803
	# 2022-05-03   909.250000  21236500   0.006964 -0.173521
	# 2022-05-04   952.619995  27214600   0.046596  0.248032
	# 2022-05-05   873.280029  30839700  -0.086960  0.125049
	# 2022-05-06   865.650024  24264100  -0.008776 -0.239805
	# 2022-05-09   787.109985  30270100  -0.095113  0.221163
	# 2022-05-10   800.039978  28133900   0.016294 -0.073185
	# 2022-05-11   734.000000  32408200  -0.086153  0.141436
	# 2022-05-12   728.000000  46771000  -0.008208  0.366852
	# 2022-05-13   769.590027  30651800   0.055557 -0.422572
	# 2022-05-16   724.369995  28699500  -0.060556 -0.065812
	# 2022-05-17   761.609985  26745400   0.050132 -0.070517
	# 2022-05-18   709.809998  29270600  -0.070437  0.090221
	# 2022-05-19   709.419983  30005200  -0.000550  0.024787

# Show only rows where the price rise is above 5%
print(df[abs(df['PriceRise']) > 0.05])
	#                  Price    Volume  PriceRise   VolRise
	# Date                                                 
	# 2022-04-26  876.419983  45377900  -0.129928  0.689125
	# 2022-05-05  873.280029  30839700  -0.086960  0.125049
	# 2022-05-09  787.109985  30270100  -0.095113  0.221163
	# 2022-05-11  734.000000  32408200  -0.086153  0.141436
	# 2022-05-13  769.590027  30651800   0.055557 -0.422572
	# 2022-05-16  724.369995  28699500  -0.060556 -0.065812
	# 2022-05-17  761.609985  26745400   0.050132 -0.070517
	# 2022-05-18  709.809998  29270600  -0.070437  0.090221

# Show the average volume change over the entire series
print(df['VolRise'].mean())
	# 0.01149423868787929

# Calculate the average volume change over just the rows with > 5% price rise
print(df[abs(df['PriceRise']) > 0.05]['VolRise'].mean())
	# 0.08851161450600036

# It's about 7x higher.
# Indicates that there may be a correlation between sales numbers and stock price